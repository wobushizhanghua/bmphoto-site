<?php

defined('ABSPATH') || die('Access Denied');

class WDFSiteControllerBase {
  ////////////////////////////////////////////////////////////////////////////////////////
  // Events                                                                             //
  ////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////
  // Constants                                                                          //
  ////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////
  // Variables                                                                          //
  ////////////////////////////////////////////////////////////////////////////////////////
  protected $default_view = 'ecommercewd';

  ////////////////////////////////////////////////////////////////////////////////////////
  // Constructor & Destructor                                                           //
  ////////////////////////////////////////////////////////////////////////////////////////
  public function __construct($config = array()) {
    // parent::__construct($config);
    try {
      if (session_id() == '') {
        session_start();
      }
    } catch (Exception $e) {
      echo __('Warning: ', 'wde'),  $e->getMessage(), "\n";
    }

    WDFInput::set('view', WDFInput::get_controller());
  }

  public function display($params) {
    $controller = $params['type'];
    // $task = $params['layout'];

    require_once WD_E_DIR . "/frontend/models/" . $controller . ".php";
    $model_class = ucfirst(WDFHelper::get_com_name()) . 'Model' . ucfirst($controller);
    $model = new $model_class();

    require_once WD_E_DIR . "/frontend/views/" . $controller . "/view.php";
    $view_class = ucfirst(WDFHelper::get_com_name()) . 'View' . ucfirst($controller);
    $view = new $view_class($model);

    echo $view->display($params);
  }

  ////////////////////////////////////////////////////////////////////////////////////////
  // Public Methods                                                                     //
  ////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////
  // Getters & Setters                                                                  //
  ////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////
  // Private Methods                                                                    //
  ////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////
  // Listeners                                                                          //
  ////////////////////////////////////////////////////////////////////////////////////////
}